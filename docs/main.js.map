{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/modules/about/components/card/card.component.css","webpack:///./src/app/modules/about/components/card/card.component.html","webpack:///./src/app/modules/about/components/card/card.component.ts","webpack:///./src/app/modules/about/pages/about.component.css","webpack:///./src/app/modules/about/pages/about.component.html","webpack:///./src/app/modules/about/pages/about.component.ts","webpack:///./src/app/modules/form/components/rating/rating.component.css","webpack:///./src/app/modules/form/components/rating/rating.component.html","webpack:///./src/app/modules/form/components/rating/rating.component.ts","webpack:///./src/app/modules/form/form.component.css","webpack:///./src/app/modules/form/form.component.html","webpack:///./src/app/modules/form/form.component.ts","webpack:///./src/app/modules/login/login.component.css","webpack:///./src/app/modules/login/login.component.html","webpack:///./src/app/modules/login/login.component.ts","webpack:///./src/app/modules/map/components/geocoder/geocoder.component.css","webpack:///./src/app/modules/map/components/geocoder/geocoder.component.html","webpack:///./src/app/modules/map/components/geocoder/geocoder.component.ts","webpack:///./src/app/modules/map/components/searchtypes/searchtypes.component.css","webpack:///./src/app/modules/map/components/searchtypes/searchtypes.component.html","webpack:///./src/app/modules/map/components/searchtypes/searchtypes.component.ts","webpack:///./src/app/modules/map/map.component.css","webpack:///./src/app/modules/map/map.component.html","webpack:///./src/app/modules/map/map.component.ts","webpack:///./src/app/modules/profile/profile.component.css","webpack:///./src/app/modules/profile/profile.component.html","webpack:///./src/app/modules/profile/profile.component.ts","webpack:///./src/app/modules/register/register.component.css","webpack:///./src/app/modules/register/register.component.html","webpack:///./src/app/modules/register/register.component.ts","webpack:///./src/app/shared/alert/alert.component.html","webpack:///./src/app/shared/alert/alert.component.ts","webpack:///./src/app/shared/auth/auth.guard.ts","webpack:///./src/app/shared/components/navbar/navbar.component.css","webpack:///./src/app/shared/components/navbar/navbar.component.html","webpack:///./src/app/shared/components/navbar/navbar.component.ts","webpack:///./src/app/shared/components/tabset/tabset.component.css","webpack:///./src/app/shared/components/tabset/tabset.component.html","webpack:///./src/app/shared/components/tabset/tabset.component.ts","webpack:///./src/app/shared/models/alert.ts","webpack:///./src/app/shared/services/alert.service.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/store.service.ts","webpack:///./src/app/shared/services/to-map.service.ts","webpack:///./src/app/shared/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar id=\\\"app-navbar\\\"></app-navbar>\\n<br>\\n<router-outlet id=\\\"router-outlet\\\"></router-outlet>\\n\"","//Credits\n//https://medium.com/@balramchavan/integrating-google-maps-in-angular-5-ca5f68009f29\n//https://github.com/ultrasonicsoft/googlemaps-angular6/tree/master/src\n//npm install --save-dev @types/googlemap\n//api key in index.html\nimport { Component } from '@angular/core';\n///import { } from '@types/googlemaps'  //ng version < 6\ndeclare var google: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\nimport { MapComponent } from './modules/map/map.component';\nimport { FormComponent } from './modules/form/form.component';\nimport { StoreService } from './shared/services/store.service';\n//import { SaveComponent } from './modules/map/components/save/save.component';\nimport { NavbarComponent } from './shared/components/navbar/navbar.component';\nimport { AlertComponent } from './shared/alert/alert.component';\nimport { AlertService } from './shared/services/alert.service';\nimport { TabsetComponent } from './shared/components/tabset/tabset.component';\nimport { GeocoderComponent } from './modules/map/components/geocoder/geocoder.component';\nimport { RatingComponent } from './modules/form/components/rating/rating.component';\nimport { SearchtypesComponent } from './modules/map/components/searchtypes/searchtypes.component';\nimport { LoginComponent } from './modules/login/login.component';\nimport { RegisterComponent } from './modules/register/register.component';\nimport { ProfileComponent } from './modules/profile/profile.component';\nimport { AuthGuard } from './shared/auth/auth.guard';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpModule } from '@angular/http'; //this is old but whatever..\nimport { RouterModule, Routes } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AboutComponent } from './modules/about/pages/about.component';\nimport { CardComponent } from './modules/about/components/card/card.component'\n\nconst appRoutes: Routes = [\n  {path: '', component: MapComponent},\n  {path: 'about', component: AboutComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  //{path: 'map', component: MapComponent, canActivate:[AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate:[AuthGuard]}\n]\n\n// id_token is from storeUserData(token, user) in auth.service.ts\nexport function tokenGetter() {\n  return localStorage.getItem('id_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    FormComponent,\n    //SaveComponent,\n    NavbarComponent,\n    AlertComponent,\n    GeocoderComponent,\n    SearchtypesComponent,\n    RatingComponent,\n    TabsetComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    AboutComponent,\n    CardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    RouterModule.forRoot(appRoutes),\n    HttpModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter\n      }\n    })\n\n  ],\n  providers: [\n    StoreService,\n    AlertService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJvdXQvY29tcG9uZW50cy9jYXJkL2NhcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card border-0\\\">  \\n  <div class=\\\"card-header p-3 mb-2 bg-dark\\\" role=\\\"tab\\\" (click)=\\\"active = !active\\\" id=\\\"heading1\\\">\\n    <h5 class=\\\"text-uppercase mb-0 py-1\\\">\\n      <a class=\\\"text-white font-weight-bold\\\" [attr.aria-expanded]=\\\"active\\\" aria-controls=\\\"aim_div\\\" href=\\\"#\\\" onClick=\\\"return false;\\\">{{label}} <i class=\\\"fas fa-angle-down rotate-icon fa-2x\\\"></i>\\n      </a>\\n    </h5>\\n  </div>\\n  <div id=\\\"aim_div\\\" class=\\\"collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"heading1\\\" data-parent=\\\"#accordion\\\"  [ngbCollapse]=\\\"!active\\\">\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row my-4\\\">\\n        <div class=\\\"col-md-8\\\">\\n          <p innerHTML={{text}}></p>\\n        </div>\\n        <div class=\\\"col-md-4 mt-3 pt-2\\\">\\n          <div class=\\\"view z-depth-1\\\">\\n            <img src={{img}} alt=\\\"\\\" class=\\\"img-fluid\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent {\n  public active = false;\n  @Input() label: string;\n  @Input() text: string;\n  @Input() img: string;\n  constructor() { }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJvdXQvcGFnZXMvYWJvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"position-relative overflow-hidden p-3 p-md-5 m-md-3 bg-light\\\">\\n  <div class=\\\"col-md-5 p-lg-5 mx-auto my-5\\\">\\n    <div class=\\\"text-center\\\">\\n      <h1 class=\\\"display-4 font-weight-normal\\\">Zero Waste Locator</h1>\\n    </div>\\n    <div class=\\\"text-left\\\">\\n      <p class=\\\"lead font-weight-normal\\\">\\n        Welcome to Zero Waste Locator, a site to find shops selling Zero Waste products.\\n      </p>\\n      <p class=\\\"lead font-weight-normal\\\">You can use the filter tab to look up Zero Waste stores present in the database. \\n        Because using the Google Maps API costs me some money, I kindly ask to register. \\n        If you do, you will be able to use the search functionality on the Google Map displayed on the <a href=\\\"/map\\\">Home page</a></p>\\n    </div>\\n    <div class=\\\"text-center\\\">\\n      <a class=\\\"btn btn-dark text-white mr-1\\\" *ngIf=\\\"authService.isTokenExp()\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n      <a class=\\\"btn btn-dark text-white mr-1\\\" *ngIf=\\\"authService.isTokenExp()\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n      <a class=\\\"btn btn-dark text-white mr-1\\\" href=\\\"/\\\">Home Page</a>\\n    </div>\\n  </div>\\n  <div class=\\\"product-device box-shadow d-none d-md-block\\\"></div>\\n  <div class=\\\"product-device product-device-2 box-shadow d-none d-md-block\\\"></div>\\n</div>\\n\\n\\n<div class=\\\"container\\\">\\n  <!--Accordion wrapper-->\\n  \\n  <div class=\\\"accordion md-accordion accordion-1\\\" id=\\\"accordion\\\" role=\\\"tablist\\\">\\n    <app-card  [label]=\\\"'Aim of this app'\\\" img=\\\"https://img.icons8.com/color/1600/google-maps.png\\\" [text]=\\\"'The aim of this app is to let users search and log stores selling <a href=https://www.goingzerowaste.com/ target=_blank>Zero Waste</a>  or Less Waste products. This app uses Google Maps to search for stores, and will allow you to save them together with their products so that you or other users can look them up.'\\\"></app-card>\\n    \\n    <app-card  [label]=\\\"'Technical details'\\\" img=\\\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Meanstack-624x250.jpg\\\" [text]=\\\"'This is a <a href=mean.io target=_blank>MEAN</a> (\\n      <a href=https://www.mongodb.com/ target=_blank>MongoDB</a>, \\n      <a href=https://expressjs.com/ target=_blank>Express</a>, \\n      <a href=https://angular.io/ target=_blank>Angular CLI 7.0.6</a>, \\n      <a href=https://nodejs.org target=_blank>Node.js</a>) app using the \\n      <a href=https://cloud.google.com/maps-platform/ target=_blank>Google Maps API</a> to show store locations on a google map. \\n    On the back-end a server is based on Node.js/Express server. <a href=https://mongoosejs.com/ target=_blank>Mongoose ODM</a> is used to connect Node.js and the MongoDB database. It provides a schema based solution to organize models and running CRUD operations. <a href=https://jwt.io/ target=_blank>JSON web tokens</a> handle user authentication and identity management. The front-end is built with Angular-CLI 7, <a href=https://getbootstrap.com/ target=_blank>Bootstrap</a>, and <a href=https://ng-bootstrap.github.io target=_blank>Angular Bootstrap</a>. The code is on my <a href=https://github.com/aless80/gmaps-ng7 target=_blank>GitHub page</a>.'\\\"></app-card>\\n    <!--\\n      <span><a href=\\\\\\\"https://github.com/aless80/gmaps-ng7\\\\\\\" target=\\\\\\\"_blank\\\\\\\">gmaps-ng7</a></span>\\n    -->\\n    \\n    <app-card  [label]=\\\"'Zero Waste'\\\" img=\\\"https://www.lrsrecycles.com/wp-content/uploads/2017/10/Zero-Waste.png\\\" [text]=\\\"'<a href=https://www.goingzerowaste.com/ target=_blank> Zero Waste</a> is a lifestyle philosophy that encourages the redesign of resource life cycles so that all products are reused. The goal is for no trash to be sent to landfills, incinerators, or the ocean. Zero Waste is for me about reducing consumption, in particular of plastic products'\\\"></app-card>\\n\\n    \\n    \\n  </div>\\n\\n<!--\\n  <a class=\\\"nav-link\\\" href=\\\"https://github.com/aless80/gmaps-ng7\\\" target=\\\"_blank\\\">GitHub <span class=\\\"sr-only\\\">(current)</span></a>\\n        <li class=\\\"nav-item\\\">\\n        <a\\n          class=\\\"nav-link\\\"\\n          href=\\\"https://angular.io/\\\"\\n          target=\\\"_blank\\\"\\n          >angular.io</a\\n        >\\n      \\n        <a\\n          class=\\\"nav-link\\\"\\n          href=\\\"https://developers.google.com/maps/documentation/geocoding/start\\\"\\n          target=\\\"_blank\\\"\\n          >Google Maps docs</a\\n        >\\n      \\n-->\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {  }\n\n}\n","module.exports = \".star {\\n  position: relative;\\n  display: inline-block;\\n  font-size: 3rem;\\n  color: #d3d3d3;\\n}\\n.full {\\n  color: green;\\n}\\n.half {\\n  position: absolute;\\n  display: inline-block;\\n  overflow: hidden;\\n  color: green;\\n}\\n.fullrated {\\n  color: #ff1e1e;\\n}\\n.halfrated {\\n  position: absolute;\\n  display: inline-block;\\n  overflow: hidden;\\n  color: #ff1e1e;\\n}\\n.rated {\\n  color: #ff1e1e;\\n}\\n.filled {\\n  color: #1e90ff;\\n}\\n/*.bad {\\n  color: #deb0b0;\\n}\\n.filled.bad {\\n  color: #ff1e1e;\\n}*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mb3JtL2NvbXBvbmVudHMvcmF0aW5nL3JhdGluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0VBQ25CLHNCQUFzQjtFQUN0QixnQkFBZ0I7RUFDaEIsZUFBZTtDQUNoQjtBQUNEO0VBQ0UsYUFBYTtDQUNkO0FBQ0Q7RUFDRSxtQkFBbUI7RUFDbkIsc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQixhQUFhO0NBQ2Q7QUFFRDtFQUNFLGVBQWU7Q0FDaEI7QUFDRDtFQUNFLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsaUJBQWlCO0VBQ2pCLGVBQWU7Q0FDaEI7QUFFRDtFQUNFLGVBQWU7Q0FDaEI7QUFDRDtFQUNFLGVBQWU7Q0FDaEI7QUFDRDs7Ozs7R0FLRyIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZm9ybS9jb21wb25lbnRzL3JhdGluZy9yYXRpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdGFyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgY29sb3I6ICNkM2QzZDM7XG59XG4uZnVsbCB7XG4gIGNvbG9yOiBncmVlbjtcbn1cbi5oYWxmIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNvbG9yOiBncmVlbjtcbn1cblxuLmZ1bGxyYXRlZCB7XG4gIGNvbG9yOiAjZmYxZTFlO1xufVxuLmhhbGZyYXRlZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjb2xvcjogI2ZmMWUxZTtcbn1cblxuLnJhdGVkIHtcbiAgY29sb3I6ICNmZjFlMWU7XG59XG4uZmlsbGVkIHtcbiAgY29sb3I6ICMxZTkwZmY7XG59XG4vKi5iYWQge1xuICBjb2xvcjogI2RlYjBiMDtcbn1cbi5maWxsZWQuYmFkIHtcbiAgY29sb3I6ICNmZjFlMWU7XG59Ki8iXX0= */\"","module.exports = \"<!--fill is if one star is full-->\\n<ng-template #t let-fill=\\\"fill\\\" let-index=\\\"index\\\">\\n  \\n  <span class=\\\"star\\\" [class.full]=\\\"fill === 100\\\">\\n    <span class=\\\"half\\\" [class.fullrated]=\\\"user_rating\\\" [style.width.%]=\\\"fill\\\" (click)=\\\"setRating(index+1)\\\">&#9733;</span>\\n    &#9733;\\n  </span>\\n</ng-template>\\n\\n<p>\\n  <ngb-rating id=\\\"ngb-rating\\\" [starTemplate]=\\\"t\\\" \\n  [rate]=\\\"rating.total/rating.count\\\" \\n  (hover)=\\\"hovered=$event\\\" (leave)=\\\"hovered=0\\\" \\n  [readonly]=\\\"false\\\" max=\\\"5\\\"></ngb-rating>\\n  \\n\\n  <b *ngIf=\\\"rating.count==1; else goTemplate\\\">(1 rating of {{rating.total}})</b>\\n  <ng-template #goTemplate>\\n    <b>({{rating.count}} ratings with average {{rating.total/rating.count | number : '1.1-1'}})</b>\\n  </ng-template>\\n</p>\\n\\n<!--\\n<p>rating: <b>{{rating.total/rating.count | number : '1.1-1'}}</b>&nbsp;\\n (rating.total: {{rating.total}} - rating.count: {{rating.count}})</p>\\n<p>Hovered: <b>{{hovered}}</b></p>\\n<p>User rating: <b>{{user_rating}}</b></p>\\n-->\\n\\n<!--\\n<button class=\\\"btn btn-sm btn-outline-{{readonly ? 'danger' : 'success'}}\\\" (click)=\\\"readonly = !readonly\\\">\\n  {{ readonly ? \\\"readonly\\\" : \\\"editable\\\"}}\\n</button>\\n-->\"","import { Component, Input, Output } from '@angular/core';\nimport { EventEmitter } from \"@angular/core\";\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.css']\n})\nexport class RatingComponent {\n\n  constructor() { }\n  @Input() rating;\n  @Input() user_rating: number;\n  @Output() user_ratingChange = new EventEmitter<string>();\n  \n  hovered = 0;\n  readonly = false;\n\n  setRating(value) {\n    this.user_rating = value;\n    this.user_ratingChange.emit(value);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZm9ybS9mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"formResult !== undefined\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 order-md-1\\\">\\n      <h4 class=\\\"mb-3\\\">Store information</h4>\\n      <form class=\\\"needs-validation\\\" novalidate=\\\"\\\">\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-9 mb-3\\\">\\n            <label for=\\\"address\\\">Address</label>\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"formResult.address + ', ' + formResult.street_num\\\" id=\\\"address\\\" name='address' placeholder=\\\"\\\" required=\\\"\\\" type=\\\"text\\\">\\n            <div class=\\\"invalid-feedback\\\">\\n              Please enter the address.\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2 mb-3\\\">\\n            <label for=\\\"zip\\\">Zip</label>\\n            <input class=\\\"form-control\\\" id=\\\"zip\\\" [(ngModel)]=\\\"formResult.zip\\\" name=\\\"zip\\\" placeholder=\\\"\\\" required=\\\"\\\" type=\\\"text\\\">\\n            <div class=\\\"invalid-feedback\\\">\\n              Zip code required.\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 mb-3\\\" *ngIf=\\\"formResult.locality\\\">\\n            <label for=\\\"locality\\\">Town</label>\\n            <input class=\\\"form-control\\\" id=\\\"locality\\\" [(ngModel)]=\\\"formResult.locality\\\" name=\\\"locality\\\" placeholder=\\\"\\\" required=\\\"\\\" type=\\\"text\\\">\\n          </div>\\n          <div class=\\\"col-md-4 mb-3\\\">\\n            <label for=\\\"country\\\">Country</label>\\n            <select class=\\\"custom-select d-block w-100\\\" id=\\\"country\\\" name=\\\"country\\\" [(ngModel)]=\\\"formResult.country\\\" required=\\\"\\\">\\n              <option value=\\\"\\\">{{formResult.country}}</option>\\n              <option [value]=\\\"country\\\" *ngFor=\\\"let country of countries\\\">             {{country}}</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2 mb-3\\\">\\n            <label for=\\\"username\\\">Added by:</label>\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control\\\" [(ngModel)]=\\\"formResult.username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required=\\\"\\\" type=\\\"text\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 mb-3\\\">\\n            <label for=\\\"googlemaps\\\">Link to Google Maps \\n              <!--<span class=\\\"text-muted\\\">(Optional)</span>-->\\n            </label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goToGoogleMaps($event)\\\">Go to Google Maps</button>\\n              </div>\\n              <!--<input class=\\\"form-control\\\" [(ngModel)]=\\\"formResult.url\\\" name=\\\"url\\\" placeholder=\\\"Url to Google Maps\\\" type=\\\"text\\\">\\n                -->\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4 mb-3\\\">\\n            <label for=\\\"coordinates\\\">Latitude and logitude</label>\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"formResult.coords[0] + ', ' + formResult.coords[1]\\\" id=\\\"coordinates\\\" name=\\\"coordinates\\\" placeholder=\\\"Marker's coordinates\\\" required=\\\"\\\" type=\\\"text\\\">\\n          </div>\\n        </div>\\n\\n        <app-rating id=\\\"app-rating\\\" [(user_rating)]=\\\"user_rating\\\" [(rating)]=\\\"formResult.rating\\\" name=\\\"rating\\\"></app-rating>\\n\\n        <h4 class=\\\"mb-3\\\">Store type</h4>\\n        <form>\\n          <div class=\\\"checkbox\\\" *ngFor=\\\"let type of storetypes\\\">\\n            <label>\\n              <input [disabled]=\\\"authService.isTokenExp()\\\" type=\\\"checkbox\\\" [checked]=\\\"hasType(type)\\\" (click)=\\\"toggleType($event)\\\" name=\\\"{{type}}\\\">&nbsp;{{type}}\\n            </label>\\n          </div>\\n          <div class=\\\"checkbox\\\">\\n            <label class=\\\"custom\\\" (click)=\\\"clickNewtypeText($event)\\\">\\n              <input [disabled]=\\\"authService.isTokenExp()\\\" type=\\\"checkbox\\\" [(checked)]=\\\"checked_newType\\\" value=\\\"\\\" (click)=\\\"clickNewtypeText($event)\\\">{{newType}}\\n            </label>\\n            <span style=\\\"cursor:pointer;color:blue;\\\" [hidden]=\\\"hide_edit\\\"\\n              (click)=\\\"editNewStoreTypeInput($event)\\\">&nbsp;Edit\\n            </span>\\n          </div>\\n          <div class=\\\"input-group\\\" *ngIf=\\\"show_newtype_editor\\\">\\n            <div class=\\\"col-md-6 mb-3\\\">    \\n              <input #box (keyup.enter)=\\\"confirmNewType(box.value, $event)\\\" (blur)=\\\"confirmNewType(box.value, $event); box.value=''\\\" value=\\\"{{newType}}\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"confirmNewType(box.value, $event)\\\">Add</button>\\n            </div>\\n          </div>\\n        </form>\\n\\n        <h4 class=\\\"mb-3\\\">Description</h4>\\n        <textarea class=\\\"col-md-9 mb-3\\\" rows=\\\"4\\\" [(ngModel)]=\\\"formResult.descr\\\" name=\\\"description\\\" placeholder=\\\"Optional description\\\" required=\\\"\\\"></textarea>\\n        <div class=\\\"row\\\" *ngIf=\\\"!authService.isTokenExp()\\\">\\n          <div class=\\\"col-md-4\\\">        \\n            <div class=\\\"input-group-append\\\">\\n              <div *ngIf=\\\"formResult._id; then update else save\\\"></div>\\n              <ng-template #update>\\n                <button  id=\\\"update\\\" type=\\\"submit\\\" class=\\\"btn btn-dark btn-lg btn-block\\\" (click)=\\\"submitForm()\\\">Update</button>                \\n              </ng-template>\\n              <ng-template #save>\\n                <button  id=\\\"save\\\" type=\\\"submit\\\" class=\\\"btn btn-dark btn-lg btn-block\\\" (click)=\\\"submitForm()\\\">Save</button>\\n              </ng-template>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </form>\\n    </div>\\n\\n    <!--\\n    <div class=\\\"col-md-4 order-md-2 mb-4\\\">\\n      <h4 class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n        <span class=\\\"text-muted\\\">Zero Waste Products</span>\\n        <span class=\\\"badge badge-secondary badge-pill\\\">3</span>\\n      </h4>\\n      <ul class=\\\"list-group mb-3\\\">\\n        <li class=\\\"list-group-item d-flex justify-content-between lh-condensed\\\">\\n          <div>\\n            <h6 class=\\\"my-0\\\">Product name</h6>\\n            <small class=\\\"text-muted\\\">Brief description</small>\\n          </div>\\n          <span class=\\\"text-muted\\\">$12</span>\\n        </li>\\n        <li class=\\\"list-group-item d-flex justify-content-between lh-condensed\\\">\\n          <div>\\n            <h6 class=\\\"my-0\\\">Second product</h6>\\n            <small class=\\\"text-muted\\\">Brief description</small>\\n          </div>\\n          <span class=\\\"text-muted\\\">$8</span>\\n        </li>\\n        <li class=\\\"list-group-item d-flex justify-content-between lh-condensed\\\">\\n          <div>\\n            <h6 class=\\\"my-0\\\">Third item</h6>\\n            <small class=\\\"text-muted\\\">Brief description</small>\\n          </div>\\n          <span class=\\\"text-muted\\\">$5</span>\\n        </li>\\n        <li class=\\\"list-group-item d-flex justify-content-between bg-light\\\">\\n          <div class=\\\"text-success\\\">\\n            <h6 class=\\\"my-0\\\">Promo code</h6>\\n            <small>EXAMPLECODE</small>\\n          </div>\\n          <span class=\\\"text-success\\\">-$5</span>\\n        </li>\\n        <li class=\\\"list-group-item d-flex justify-content-between\\\">\\n          <span>Total (USD)</span>\\n          <strong>$20</strong>\\n        </li>\\n      </ul>\\n\\n      <form class=\\\"card p-2\\\">\\n        <div class=\\\"input-group\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"Promo code\\\" type=\\\"text\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\">Redeem</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  -->\\n  </div>\\n\\n  <!--<footer class=\\\"my-5 pt-5 text-muted text-center text-small\\\">\\n    <p class=\\\"mb-1\\\">© 2017-2018 Company Name</p>\\n    <ul class=\\\"list-inline\\\">\\n      <li class=\\\"list-inline-item\\\"><a href=\\\"#\\\">Privacy</a></li>\\n      <li class=\\\"list-inline-item\\\"><a href=\\\"#\\\">Terms</a></li>\\n      <li class=\\\"list-inline-item\\\"><a href=\\\"#\\\">Support</a></li>\\n    </ul>\\n  </footer>-->\\n</div>\\n\"","import { Component, Input, Output } from \"@angular/core\";\nimport { EventEmitter } from \"@angular/core\";\nimport { Store } from \"../../shared/models/store.model\";\nimport { OnChanges, SimpleChanges, SimpleChange } from \"@angular/core\";\nimport { ToMapService } from '../../shared/services/to-map.service'\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: \"app-form\",\n  templateUrl: \"./form.component.html\",\n  styleUrls: [\"./form.component.css\"]\n})\nexport class FormComponent implements OnChanges {\n  @Input() formResult: Store;\n  @Input() storetypes: string[];\n  @Output() submit = new EventEmitter<boolean>();\n  user_rating: number;\n  \n  //Variables to handle the new store type (selecting it, editing it..)\n  public static readonly NEWTYPE_PLACEHOLDER = \"New store type\";\n  newType: string = FormComponent.NEWTYPE_PLACEHOLDER;\n  checked_newType: boolean = false;\n  show_newtype_editor: boolean = false;\n  hide_edit: boolean = true;\n\n  subscription: Subscription;\n    \n  constructor(\n    private toMapService: ToMapService,\n    private authService: AuthService) {\n    this.subscription = toMapService.formSubmit$.subscribe(\n      obj => console.log(obj)\n    );\n  }\n  \n  ngOnChanges(changes: SimpleChanges) {\n    //console.log(\"form - ngOnChanges\", changes);\n    //Uncheck new type cause there is a new form\n    this.checked_newType = false\n  }\n\n  ///Handling the store types checkboxes\n  //Check if store is of a certain store type\n  hasType(type: string){\n    return this.formResult.types.includes(type)\n  } \n  //Check/uncheck new type\n  toggleType(event: any){\n    if (event.target.checked)\n      this.formResult.types.push(event.target.name)\n    else {\n      this.removeFromTypesArray(event.target.name)\n    }\n    //Sort types array alphabetically\n    this.formResult.types.sort()\n  }\n  removeFromTypesArray(type: string) {\n    let ind = this.formResult.types.indexOf(type);\n      if (ind>=0)\n        this.formResult.types.splice(ind,1);\n  }\n  \n  ///Handling the new store type checkbox\n  //User clicks on text of new type\n  clickNewtypeText(event: any){\n    //console.log('clickNewtypeText',event)\n    //If the user clicks on the default placeholder for the new type, edit it\n    if (this.authService.isTokenExp()) return\n    if (this.newType==FormComponent.NEWTYPE_PLACEHOLDER)\n      this.editNewStoreTypeInput(event);\n    if (event.target == 'input')\n      this.checked_newType = event.target.checked;\n  }\n  //Edit the new type\n  editNewStoreTypeInput(event: KeyboardEvent) {\n    //console.log('editNewStoreTypeInput',event)\n    //Show the text input with the previous new type or empty if none\n    this.show_newtype_editor = !this.show_newtype_editor;\n    this.newType = '';\n    //Remove previously inserted type\n    this.removeFromTypesArray(this.newType);\n    //Hide the \"Edit\" text\n    this.hide_edit = true;\n  }\n  //User clicks on \"Add\" or press enter to confirm the new type\n  confirmNewType(value: string, event:KeyboardEvent) {\n    //console.log(\"confirmNewType\", event.type,  \"value=-\", value,  event);\n    //Behavior depends on whether there is any text in the input box\n    if (value) {\n      //Hide new type editor\n      this.show_newtype_editor = false;\n      //Store the new type\n      this.newType = value;\n      this.formResult.types.push(this.newType);\n      //Show the \"Edit\" text, checkmark is on\n      this.hide_edit = false;\n      //Checking the checkbox is prob not necessary, maybe needed when checkbox off while editing\n      this.checked_newType = true;\n      //Good stuff I was playing with:\n      //(<HTMLInputElement>event.target)   this is the <input> element\n      //event.preventDefault()\n      //event.stopPropagation();\n    } else {  \n      //Reset to default placeholder\n      this.show_newtype_editor = false;\n      this.newType=FormComponent.NEWTYPE_PLACEHOLDER;\n      this.hide_edit = true;\n      //Unchecking the checkbox is prob not necessary but does not hurt\n      this.checked_newType = false;\n    }\n  }\n\n\n  goToGoogleMaps(event: KeyboardEvent) {\n    //console.log('goToGoogleMaps', event.type, event);\n    if (event.type != \"click\") return;\n    var url =\n      \"https://www.google.com/maps/search/?api=1&query=\" +\n      encodeURI(this.formResult.address) +\n      encodeURI(\n        \",\" +\n          [\n            this.formResult.street_num,\n            this.formResult.zip,\n            this.formResult.locality,\n            this.formResult.country\n          ].join(\" \")\n      );\n    var win = window.open(url, \"_blank\");\n    win.focus();\n  }\n  \n  submitForm() {\n    //Uncheck the new type cause it is going to be saved\n    this.checked_newType = false\n    //Update formResult.rating with user_rating\n    if (this.user_rating !== undefined) {\n      this.formResult.rating.total += this.user_rating;\n      this.formResult.rating.count += 1\n    }    \n    //Let Map parent save the form to DB\n    this.toMapService.sendFormSubmit(null)\n  }\n\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscription.unsubscribe();\n  }\n\n  countries = [\n    \"USA\",\n    \"Canada\",\n    \"Afghanistan\",\n    \"Albania\",\n    \"Algeria\",\n    \"Andorra\",\n    \"Angola\",\n    \"Antigua and Barbuda\",\n    \"Argentina\",\n    \"Armenia\",\n    \"Aruba\",\n    \"American Samoa\",\n    \"Australia\",\n    \"Austria\",\n    \"Azerbaijan\",\n    \"Bahamas\",\n    \"Bangladesh\",\n    \"Barbados\",\n    \"Burundi\",\n    \"Belgium\",\n    \"Benin\",\n    \"Bermuda\",\n    \"Bhutan\",\n    \"Bosnia and Herzegovina\",\n    \"Belize\",\n    \"Belarus\",\n    \"Bolivia\",\n    \"Botswana\",\n    \"Brazil\",\n    \"Bahrain\",\n    \"Brunei\",\n    \"Bulgaria\",\n    \"Burkina Faso\",\n    \"Central African Republic\",\n    \"Cambodia\",\n    \"Canada\",\n    \"Cayman Islands\",\n    \"Congo\",\n    \"Chad\",\n    \"Chile\",\n    \"China\",\n    \"Cote d'Ivoire\",\n    \"Cameroon\",\n    \"DR Congo\",\n    \"Cook Islands\",\n    \"Colombia\",\n    \"Comoros\",\n    \"Cape Verde\",\n    \"Costa Rica\",\n    \"Croatia\",\n    \"Cuba\",\n    \"Cyprus\",\n    \"Czech Republic\",\n    \"Denmark\",\n    \"Djibouti\",\n    \"Dominica\",\n    \"Dominican Republic\",\n    \"Ecuador\",\n    \"Egypt\",\n    \"Eritrea\",\n    \"El Salvador\",\n    \"Spain\",\n    \"Estonia\",\n    \"Ethiopia\",\n    \"Fiji\",\n    \"Finland\",\n    \"France\",\n    \"Micronesia\",\n    \"Gabon\",\n    \"Gambia\",\n    \"Great Britain\",\n    \"Guinea-Bissau\",\n    \"Georgia\",\n    \"Equatorial Guinea\",\n    \"Germany\",\n    \"Ghana\",\n    \"Greece\",\n    \"Grenada\",\n    \"Guatemala\",\n    \"Guinea\",\n    \"Guam\",\n    \"Guyana\",\n    \"Haiti\",\n    \"Hong Kong\",\n    \"Honduras\",\n    \"Hungary\",\n    \"Indonesia\",\n    \"India\",\n    \"Iran\",\n    \"Ireland\",\n    \"Iraq\",\n    \"Iceland\",\n    \"Israel\",\n    \"Virgin Islands\",\n    \"Italy\",\n    \"British Virgin Islands\",\n    \"Jamaica\",\n    \"Jordan\",\n    \"Japan\",\n    \"Kazakhstan\",\n    \"Kenya\",\n    \"Kyrgyzstan\",\n    \"Kiribati\",\n    \"South Korea\",\n    \"Saudi Arabia\",\n    \"Kuwait\",\n    \"Laos\",\n    \"Latvia\",\n    \"Libya\",\n    \"Liberia\",\n    \"Saint Lucia\",\n    \"Lesotho\",\n    \"Lebanon\",\n    \"Liechtenstein\",\n    \"Lithuania\",\n    \"Luxembourg\",\n    \"Madagascar\",\n    \"Morocco\",\n    \"Malaysia\",\n    \"Malawi\",\n    \"Moldova\",\n    \"Maldives\",\n    \"Mexico\",\n    \"Mongolia\",\n    \"Marshall Islands\",\n    \"Macedonia\",\n    \"Mali\",\n    \"Malta\",\n    \"Montenegro\",\n    \"Monaco\",\n    \"Mozambique\",\n    \"Mauritius\",\n    \"Mauritania\",\n    \"Myanmar\",\n    \"Namibia\",\n    \"Nicaragua\",\n    \"Netherlands\",\n    \"Nepal\",\n    \"Nigeria\",\n    \"Niger\",\n    \"Norway\",\n    \"Nauru\",\n    \"New Zealand\",\n    \"Oman\",\n    \"Pakistan\",\n    \"Panama\",\n    \"Paraguay\",\n    \"Peru\",\n    \"Philippines\",\n    \"Palestine\",\n    \"Palau\",\n    \"Papua New Guinea\",\n    \"Poland\",\n    \"Portugal\",\n    \"North Korea\",\n    \"Puerto Rico\",\n    \"Qatar\",\n    \"Romania\",\n    \"South Africa\",\n    \"Russia\",\n    \"Rwanda\",\n    \"Samoa\",\n    \"Senegal\",\n    \"Seychelles\",\n    \"Singapore\",\n    \"Saint Kitts and Nevis\",\n    \"Sierra Leone\",\n    \"Slovenia\",\n    \"San Marino\",\n    \"Solomon Islands\",\n    \"Somalia\",\n    \"Serbia\",\n    \"Sri Lanka\",\n    \"Sao Tome and Principe\",\n    \"Sudan\",\n    \"Switzerland\",\n    \"Suriname\",\n    \"Slovakia\",\n    \"Sweden\",\n    \"Swaziland\",\n    \"Syria\",\n    \"Tanzania\",\n    \"Tonga\",\n    \"Thailand\",\n    \"Tajikistan\",\n    \"Turkmenistan\",\n    \"Timor-Leste\",\n    \"Togo\",\n    \"Chinese Taipei\",\n    \"Trinidad and Tobago\",\n    \"Tunisia\",\n    \"Turkey\",\n    \"Tuvalu\",\n    \"United Arab Emirates\",\n    \"Uganda\",\n    \"Uk\",\n    \"Ukraine\",\n    \"Uruguay\",\n    \"United States\",\n    \"Uzbekistan\",\n    \"Vanuatu\",\n    \"Venezuela\",\n    \"Vietnam\",\n    \"Saint Vincent and the Grenadines\",\n    \"Yemen\",\n    \"Zambia\",\n    \"Zimbabwe\"\n  ];\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">    \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 order-md-1\\\">\\n      <h2 class=\\\"page-header\\\">Login</h2>      \\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onLoginSubmit()\\\" novalidate>\\n\\n        <!--<app-singlecontrol (ngModel)=\\\"'username'\\\" [label]=\\\"'Username'\\\" [type]=\\\"'text'\\\" [name]=\\\"'username'\\\" [value]=\\\"'amarinz'\\\"></app-singlecontrol>\\n        -->\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-7 mb-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Username</label>\\n              <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" value=\\\"amarin\\\">\\n            </div>\\n          </div>\\n        </div>   \\n      \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-7 mb-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Password</label>\\n              <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"input-group-append\\\">\\n          <alert></alert>\\n        </div>\\n        <br>\\n        <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-dark\\\"  [disabled]=\\\"form.pristine\\\">\\n        <a href={{node_url}} class=\\\"col-md-3\\\" >Forgot password</a>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n        \"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { AlertService } from \"../../shared/services/alert.service\";\nimport { FormGroup,FormBuilder } from '@angular/forms';\nimport { Subscription } from 'rxjs'; //to unsubscribe\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public form: FormGroup;\n  private subscription: Subscription;\n  public node_url:string = environment.node_protocol+'://'+environment.node_host+':'+environment.node_port+'/users/forgot_password';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService:AuthService,\n    private router:Router,\n    private alertService: AlertService,\n  ) {\n    this.form = formBuilder.group({\n      username: '',\n      password: '',\n    });\n   }\n\n  //Unsubscribe\n  ngOnDestroy() {\n    if (typeof this.subscription !== 'undefined') {\n      this.subscription.unsubscribe();\n    }\n  }\n  \n  ngOnInit() {}\n\n  onLoginSubmit() {\n    const user = Object.assign({}, this.form.value);\n    this.subscription = this.authService.authenticateUser(user)\n      .subscribe(data => {\n        if(data.success){\n          this.authService.storeUserData(data.token, data.user);\n          this.alertService.success('You are now logged in', 2500);\n          setTimeout(() => this.router.navigate(['/']), 1500);\n        } else {\n          this.alertService.error(data.msg, 2500);\n          this.router.navigate(['/login']);\n        }\n      });\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFwL2NvbXBvbmVudHMvZ2VvY29kZXIvZ2VvY29kZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <form class=\\\"form-horizontal\\\" novalidate=\\\"\\\">\\n      <div class=\\\"col-md-9 mb-3\\\">\\n        <label for=\\\"address\\\">Full address</label>\\n        <div class=\\\"input-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"search_string\\\" id=\\\"address_string\\\" name=\\\"address_string\\\" placeholder=\\\"Address\\\" type=\\\"text\\\" [disabled]=\\\"authService.isTokenExp()\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\" (click)=\\\"search()\\\" [disabled]=\\\"authService.isTokenExp() || search_string === ''\\\">Search</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\" (click)=\\\"node_geocode()\\\" hidden>Search using node-geocoder</button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10\\\">\\n        <div class=\\\"col-md-9 mb-3\\\">\\n          <div class=\\\"input-group-append alert alert-warning\\\" *ngIf=\\\"authService.isTokenExp()\\\"><br>\\n            <h5>Please register and login to search on Google Maps geolocation and more</h5>\\n          </div>\\n          <div class=\\\"input-group-append alert alert-warning\\\" *ngIf=\\\"searchQuota != ''\\\"><br>\\n            <h5>{{searchQuota}}</h5>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StoreService } from \"../../../../shared/services/store.service\";\nimport { MapComponent } from '../../map.component'\nimport { Store } from \"../../../../shared/models/store.model\";\n//Not sure forwaredRef is needed to inject parent (Map) in child (Geocoder) class\nimport {Inject, forwardRef} from '@angular/core';\nimport { AuthService } from '../../../../shared/services/auth.service';\nimport { environment } from '../../../../../environments/environment';\n\n/*\nNote for myself\nInstead of injecting parent Map in child (Geocoder), the other option is to use an emitter in child\nimport { EventEmitter, Output } from \"@angular/core\";\n..\nexport class SaveComponent implements OnInit {\n  @Output() search = new EventEmitter<boolean>();\n  findLocationTest() {\n    this.search.emit(null);\n  }\n}\n//parent:\n<app-save (search)=\"run_geocoding($event)\"></app-save>\n//child\n<button type=\"submit\" class=\"btn btn-dark\" (click)=\"findLocationTest()\">Search</button>\n*/\n\n@Component({\n  selector: 'app-geocoder',\n  templateUrl: './geocoder.component.html',\n  styleUrls: ['./geocoder.component.css']\n})\nexport class GeocoderComponent implements OnInit {\n  public static readonly DEFAULT_SEARCH = \"\";//Bjerregaards gate 60C, 0174 Oslo\";\n  search_string: string;\n  geocoder: any;\n  searchQuota: string = '';\n\n  constructor(\n    public storeService: StoreService,\n    public authService: AuthService,\n    @Inject(forwardRef(\n      () => MapComponent)) private _parent:MapComponent\n      ) { }\n\n  ngOnInit() {\n    this.search_string = GeocoderComponent.DEFAULT_SEARCH;\n  }\n\n  //Check if address to be searched is already in DB\n  search(){\n    //Verify whether cleaned searched string is in DB\n    this.storeService.address_exists(this.search_string)\n      .subscribe(\n        (store: [any]) => {\n          //No need for geocoding when address to be searched is stored in DB\n          if (!store.length) {\n            //See if the user did not exceed their geocoding quota and is allowed to search\n            this.allowGeocodingSearch(this.geocoding.bind(this)) //need to either bind this\n          } else {\n            console.log(store.length + \" match\"+(store.length != 1 ? 'es' : '') + \". Loading address from database\", store);\n            this._parent.searchResult = store[0];\n            this._parent.process_results(store[0]);\n          }\n        },\n        err => console.error(\"Search err:\", err)\n    );\n  }\n\n  geocoding() {\n    //TODO: consider to use Place API:\n    //https://developers.google.com/maps/documentation/geocoding/best-practices\n    if (!this.geocoder) this.geocoder = new google.maps.Geocoder();\n    this.geocoder.geocode(\n      {\n        address: this.search_string,\n        region: this._parent.regionBias,\n        componentRestrictions: { country: this._parent .componentRestrictions } \n      },\n      (results, status) => {\n        console.log(\"Geocoding status:\", status, \" results:\", results);\n        if (status == google.maps.GeocoderStatus.OK) {\n          //Transform google maps result to Store type\n          var store:Store = this.storeService.result2Store(results[0]);\n          //Send to parent Map component\n          this._parent.searchResult = store;\n          this._parent.process_results(store);\n          //Log that the user carried out a search\n          this.logUserSearch();\n        }\n      }\n    );\n  }\n\n  //Return object with how many queries the user run\n  allowGeocodingSearch(callback) {\n    //Get the username from localStorage\n    let userJSON = localStorage.getItem('user')\n    let username = JSON.parse(userJSON)['username']\n    //Call service to interact with the backend\n    this.authService.getSearchFrequency(username).subscribe(res => {\n        if(res.success) {\n          // Check if the user is allowed to run a geolocation search\n          //You get eg res.data: { total: 0, lasthour: 0, today: 0 } or { lasthour: 0, today: 7, total: 7}          \n          if (this.allowGeocodingSearchLogic(res.data)) {\n            callback()\n          } else {\n            console.log(this.searchQuota)\n          }\n        }\n      },\n      err => {\n        //You get: res: Object { success: false, msg: <err> }\n        console.error('Error when retrieving number of geolocation searches:', err);\n      }\n    );\n  }\n\n  allowGeocodingSearchLogic(stats){\n    this.searchQuota = '';\n    if (stats['total'] > environment.geolocation_quota) {\n      this.searchQuota = 'Sorry, you exceeded your search quota ('+environment.geolocation_quota+' geolocation searches).'\n      return false\n    }\n    if (stats['today'] > environment.geolocation_daily_quota) {\n      this.searchQuota = 'Sorry, you exceeded your search quota for today ('+environment.geolocation_daily_quota+' geolocation searches).'\n      return false\n    }\n    if (stats['lasthour'] > environment.geolocation_hourly_quota) {\n      this.searchQuota = 'Sorry, you exceeded your search quota for the last hour ('+environment.geolocation_hourly_quota+' geolocation searches).'\n      return false\n    }\n    return true\n  }\n  \n  //Log in DB that the user carried out a search\n  logUserSearch() {\n    //Get the username from localStorage\n    let userJSON = localStorage.getItem('user')\n    let username = JSON.parse(userJSON)['username']\n    //Call service to interact with the backend\n    this.authService.logUserSearch(username).subscribe(data => {\n      if(data.success){\n        console.log('Successfully pushed date of geolocation search');\n      } else {\n        console.log('Error when pushing date of geolocation search: ', data.msg);\n      }\n    });\n  }\n  \n  //Not used and obsolete but good stuff\n  //Geocoding using in node-geocoder in backend\n  node_geocode() {\n    var out = this.storeService.geocode(this.search_string).subscribe(\n      res => {\n        console.log(\"Geocoder geocode.subscribe res:\", res);\n        //Move map to searched location\n        this._parent.map.panTo(\n          new google.maps.LatLng(res[0].latitude, res[0].longitude)\n        );\n        //Pass data to form component and set marker\n        this._parent.formResult = this.storeService.result2Store_backend(res[0]);\n        this._parent.setMarker(this._parent.formResult, undefined, \"Search result\");\n      },\n      err => console.error(\"Geocoding err:\", err),\n      () => console.log(\"Completed\")\n    );\n  }  \n}\n","module.exports = \".grey {\\n    color:grey;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYXAvY29tcG9uZW50cy9zZWFyY2h0eXBlcy9zZWFyY2h0eXBlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztDQUNkIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9tYXAvY29tcG9uZW50cy9zZWFyY2h0eXBlcy9zZWFyY2h0eXBlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyZXkge1xuICAgIGNvbG9yOmdyZXk7XG59Il19 */\"","module.exports = \"<div class=\\\"checkbox\\\">\\n  <label>\\n    <a name=\\\"selectall\\\" href=\\\"#\\\" (click)=\\\"sendAllToggle(true);\\\"><b>Select all</b></a>\\n  </label>\\n  &nbsp;\\n  <label>\\n      <a name=\\\"deselectall\\\" href=\\\"#\\\" (click)=\\\"sendAllToggle(false);\\\"><b>Deselect all</b></a>\\n  </label>\\n  \\n</div>\\n<div class=\\\"checkbox\\\" *ngFor=\\\"let type of storetypes; index as i\\\">\\n  <label>\\n    <input type=\\\"checkbox\\\" name=\\\"{{type}}\\\" (change)=\\\"sendTypeToggle($event, i)\\\" name=\\\"{{type}}\\\" [checked]=\\\"type == checked[i]\\\">&nbsp;{{type}}\\n  </label>\\n</div>\"","import { Component, Input, Output, OnDestroy, OnInit } from '@angular/core';\nimport { EventEmitter } from \"@angular/core\";\nimport { ToMapService } from '../../../../shared/services/to-map.service';\nimport { Subscription }   from 'rxjs';\n\n@Component({\n  selector: 'app-searchtypes',\n  templateUrl: './searchtypes.component.html',\n  styleUrls: ['./searchtypes.component.css']\n})\nexport class SearchtypesComponent implements OnInit, OnDestroy {\n  @Input() storetypes: string[];\n  @Output() typesEmit = new EventEmitter();\n  subscription: Subscription;\n  checked: string[]\n\n  ngOnInit() {\n    this.checked = this.storetypes.slice(0); //shallow copy\n  }\n  constructor(private toMapService: ToMapService) {\n    this.subscription = toMapService.typeToggle$.subscribe();\n   }\n\n  sendAllToggle(selection: boolean) {\n    //console.log('sendAllToggle this.checked=',this.checked, ' storetypes=',this.storetypes)\n    if (selection) \n      this.checked = this.storetypes.slice(0); //shallow copy\n    else \n      this.checked = new Array(this.storetypes.length).fill(undefined); \n    this.toMapService.sendTypeToggle(this.checked);\n  }\n\n  sendTypeToggle(event: any, ind: number) {\n    //Tell Map parent to search on types\n    if (event.target.checked) {      \n      this.checked[ind] = event.target.name;\n    } else if (!event.target.checked) {\n      this.checked[ind] = undefined;\n    }\n    this.toMapService.sendTypeToggle(this.checked.filter(x => x != undefined));\n  }\n\n  ngOnDestroy() {\n    // Prevent memory leak when component destroyed\n    this.subscription.unsubscribe();\n  }\n\n}\n","module.exports = \"body, html {\\n    height: 100%;\\n    width: 100%;\\n}\\n\\n/*#gmapdiv {\\n    width: 100%; height: 100%;\\n    position: relative;    \\n}*/\\n\\n.map-container {\\n    height: 400px; width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYXAvbWFwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsWUFBWTtDQUNmOztBQUVEOzs7R0FHRzs7QUFDSDtJQUNJLGNBQWMsQ0FBQyxZQUFZO0NBQzlCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9tYXAvbWFwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5LCBodG1sIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi8qI2dtYXBkaXYge1xuICAgIHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyAgICBcbn0qL1xuLm1hcC1jb250YWluZXIge1xuICAgIGhlaWdodDogNDAwcHg7IHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div #gmap class=\\\"map-container\\\" style=\\\"width:1000px;height:500px\\\"></div>\\n  <br>\\n  \\n  <!--<app-geocoder id=\\\"app-geocoder\\\"></app-geocoder>\\n   I am considering to move the search to a sibling component of the Map component. Now the search is in Geocoder component, which is child of Maps. The following uses an emitter and works when you restore the callbacks in Maps\\n  <app-save (search)=\\\"run_geocoding($event)\\\"></app-save>\\n  -->\\n  \\n  <!--\\n    <button type=\\\"submit\\\" (click)=\\\"test()\\\">test</button>\\n  -->\\n  <!--\\n  <p *ngIf=\\\"searchResult !== undefined\\\">searchResult {{searchResult.address}}</p>\\n  <p *ngIf=\\\"formResult !== undefined\\\">formResult {{formResult.address}}</p>\\n  -->\\n  <div class=\\\"input-group-append\\\">\\n    <alert></alert>\\n  </div>\\n  \\n  <app-tabset id=\\\"app-tabset\\\" [storetypes]=\\\"storetypes\\\" [formResult]=\\\"formResult\\\" ></app-tabset>\\n  \\n</div>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { ViewChild } from \"@angular/core\";\nimport { StoreService } from \"../../shared/services/store.service\";\nimport { Store } from \"../../shared/models/store.model\";\nimport { Subscription } from \"rxjs\"; //to unsubscribe\nimport { AlertService } from \"../../shared/services/alert.service\";\nimport { ToMapService } from '../../shared/services/to-map.service'\nimport { ValidateService } from '../../shared/services/validate.service';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: \"app-map\",\n  templateUrl: \"./map.component.html\",\n  styleUrls: [\"./map.component.css\"]\n})\nexport class MapComponent implements OnInit {\n  @ViewChild(\"gmap\") gmapElement: any;\n  map: google.maps.Map;\n  infowindow: google.maps.InfoWindow = new google.maps.InfoWindow();\n  curr_marker: google.maps.Marker;\n  markers: any[] = [];\n  selectedMarkerIndex: number;  \n  storeListSub: Subscription; //to unsubscribe\n\n  //Default settings for map and search. They can be removed\n  public static readonly DEFAULT_LAT = 49.935;\n  public static readonly DEFAULT_LNG = 10.79;\n  componentRestrictions: string = \"NO\"; //Restrict search to Norway. Used in Geocoder\n  regionBias: string = \"no\"; //region bias to Norway\n\n  //Communication between Map and Form\n  formResult: Store;    //Location of the searched location or clicked marker\n  searchResult: Store;  //The searched location\n  storetypes: string[]; //All types of store present in DB\n  \n  //Message component\n  //msgText: string = \"\";\n\n  constructor(\n    private storeService: StoreService,\n    private alertService: AlertService,\n    private toMapService: ToMapService,\n    private validateService: ValidateService,\n    private authService: AuthService\n  ) {\n    toMapService.typeToggle$.subscribe(\n      obj => this.searchType(obj)        \n    );\n    toMapService.formSubmit$.subscribe(\n      obj => this.save()\n    );\n    toMapService.searchTab$.subscribe(\n      tab => {\n        //User changed tabs\n        if (tab == 'search') {\n          //If search was used, show it\n          var callback;\n          if (this.searchResult) {\n            callback = () => {\n              this.process_results(this.searchResult)\n              //Open marker's InfoWindow not working\n              this.openInfoWindow(this.markers.length-1)\n            }\n          }\n          this.showAllStores(callback);          \n        } else if (tab == 'filter') {\n          this.removeSearchMarkers();\n        }\n      }\n    );      \n  }\n  ngOnInit() {\n    //Some addresses that work\n    //Sylvia Mølleren: Hegdehaugsveien 12, 0167 Oslo\n    //Fretex: Ullevålsveien 12, 0171 Oslo\n    //Default location for search string: see geolocation.component.ts\n    //Uncomment to populate form at startup\n    /*this.formResult = {\n      coords: [Number(59.9267819), Number(10.748087599999963)],\n      address: \"Slottsplassen\",\n      street_num: \"1\",\n      locality: \"Oslo\",\n      zip: \"0010\",\n      country: \"Norway\",\n      descr: \"This is just an example to populate the form component\",\n      types: [\"Charity shop\"],\n      username: \"aless80\",\n      rating: {total: 10, count: 3}\n    };*/\n    //Load stores\n    this.showAllStores();\n    //Get all the distinct store types present in DB. Pass to Form component\n    this.loadDistinctTypes();\n    //Create the map\n    var mapProp = {\n      center: new google.maps.LatLng(\n        MapComponent.DEFAULT_LAT,\n        MapComponent.DEFAULT_LNG\n      ),\n      zoom: 10,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    this.map = new google.maps.Map(this.gmapElement.nativeElement, mapProp);\n    //Listener to InfoWindow\n    google.maps.event.addListener(this.infowindow, \"closeclick\", () => {\n      this.formResult = undefined;\n      this.searchResult = undefined;\n    });\n    //Find current location\n    this.findMe();\n  }\n\n  ngOnDestroy() {\n    //Unsubscribe from service\n    if (typeof this.storeListSub !== 'undefined') {\n      this.storeListSub.unsubscribe();\n    }\n  }\n  ///Get position of client\n  //https://medium.com/@balramchavan/display-and-track-users-current-location-using-google-map-geolocation-in-angular-5-c259ec801d58\n  findMe() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.showCurrentPosition(\n          position,\n          \"http://maps.google.com/mapfiles/kml/pal3/icon28.png\"\n        );\n        this.map.setZoom(12);\n      });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  showCurrentPosition(position, icon?: string, title?: string) {\n    if (icon == undefined)\n      icon = \"https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2.png\";\n    if (title == undefined) title = \"No title\";\n    let location = new google.maps.LatLng(\n      position.coords.latitude,\n      position.coords.longitude\n    );\n    this.map.panTo(location);\n    //this.map.setZoom(zoom)\n    this.setCurrentMarker(location, icon, \"Current location\");\n  }\n  setCurrentMarker(location, icon?: string, title?: string) {\n    if (!this.curr_marker) {\n      this.curr_marker = new google.maps.Marker({\n        position: location,\n        map: this.map,\n        title: title,\n        icon: icon\n      });\n    } else {\n      this.curr_marker.setPosition(location);\n      this.curr_marker.setTitle(title);\n      this.curr_marker.setIcon(icon);\n    }\n  }\n\n  ///Handle markers of stores from geocoding search or from DB\n  process_results(store) {\n    //Pass data to form component and set marker\n    store.username = JSON.parse(localStorage.getItem('user')).username\n    this.formResult = store;\n    //Handle search marker\n    this.removeSearchMarkers();\n    this.setMarker(store, undefined, \"Search result\");\n    this.map.panTo(\n      new google.maps.LatLng(store.coords[0], store.coords[1])\n    );\n  }\n  //Create marker with InfoWindow. Push marker to this.markers\n  setMarker(store, icon?: string, title?: string) {\n    var marker = new google.maps.Marker({\n      position: new google.maps.LatLng(\n        store.coords[0],\n        store.coords[1]\n      ),\n      map: this.map,\n      title: title,\n      icon: icon\n    });\n    //Create markerinfo object\n    /*var markerinfo = {\n      'markertype': 'some type',\n      'formatted_address': result.formatted_address\n    }*/\n    //Add InfoWindow with listeners to marker\n    //https://stackoverflow.com/questions/31494380/google-maps-change-content-of-infowindow\n    //Create the node shown in marker's InfoWindow\n    var iwdiv = document.createElement(\"div\");\n    iwdiv.id = \"node\";\n    var h2 = document.createElement(\"h2\");\n    h2.textContent = marker.getTitle();\n    var anchor = document.createElement(\"a\");\n    anchor.href = \"#\"; //this.removeMarker(store._id)\n    anchor.text = \"Remove\";\n    //Click listener in \"Remove\" link of marker's InfoWindow\n    anchor.addEventListener(\"click\", () => {\n      this.removeMarker(store._id)      \n    }); \n    //Build everything together in iwdiv element. Add text\n    var div = document.createElement(\"div\");\n    div.appendChild(document.createElement(\"br\"));\n    div.appendChild(anchor);\n    iwdiv.appendChild(h2);\n    iwdiv.appendChild(document.createTextNode('Address: '+store.address+' '+store.street_num+', '+store.zip+', '+store.locality));\n    iwdiv.appendChild(document.createElement(\"br\"));\n    iwdiv.appendChild(document.createTextNode('Store type: '+store.types.join(', ')));\n    iwdiv.appendChild(document.createElement(\"br\"));\n    iwdiv.appendChild(document.createTextNode('Description: '+store.descr));\n    iwdiv.appendChild(document.createElement(\"br\"));\n    iwdiv.appendChild(div);\n    //Click listener to marker to set and open InfoWindow\n    //marker.content = iwdiv; //pass whole node to marker\n    marker.addListener(\"click\", () => {\n      this.infowindow.setContent(iwdiv);\n      this.infowindow.open(this.map, marker);\n      this.selectedMarkerIndex = this.markers.indexOf(marker);\n      this.formResult = store;\n    });\n    //Push marker to markers\n    this.markers.push(marker);\n    this.selectedMarkerIndex = this.markers.length;\n    //Close InfoWindow\n    this.hideInfoWindow();\n  }\n  //User closes a marker's InfoWindow\n  hideInfoWindow() {\n    this.infowindow.close();\n  }\n  //Opens a marker's InfoWindow\n  openInfoWindow(marker_ind: number){\n    google.maps.event.trigger(this.markers[marker_ind], 'click');\n  }\n  //User clicked on \"Remove\" in marker's InfoWindow. \n  //Delete from map and from storage, if applicable\n  removeMarker(_id) {\n    //Close the form\n    this.formResult = undefined;\n    //If search marker, remove it and return\n    if (this.markers[this.selectedMarkerIndex].title == 'Search result') {\n      this.removeSearchMarkers();\n      //Remove the searched location searchResult\n      this.searchResult = undefined;\n      return\n    }\n    //Delete a store from DB\n    this.markers[this.selectedMarkerIndex].setMap(null);\n    this.markers.splice(this.selectedMarkerIndex, 1);\n    this.deleteStore(_id, () => this.showAllStores()); //TODO: review\n  }\n  removeSearchMarkers() {\n    if (this.markers.length) {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (this.markers[i].title == 'Search result') {\n          this.markers[i].setMap(null);\n          this.markers.splice(i, 1);\n        }\n      }\n    } else console.log('No markers to remove')\n  }\n  \n    \n  ///Process emitters: OBSOLETE\n  /*//Get emitter to save form\n  getSaveEmitter(event:KeyboardEvent){\n    if (event == undefined) return\n    console.log('getSaveEmitter:',event.type)\n    //Handle Update and Save\n    if (this.formResult._id != undefined) {\n      this.storeService.updateStore(this.formResult)\n        .subscribe(\n            res => {\n              //Close search marker\n              this.removeSearchMarkers(); //not sure it is needed \n              this.alertService.success(\"Store updated in database\",2500)\n            },\n            err => this.error(err, 2500)\n        );\n    } else {\n      this.storeService.addStore(this.formResult)\n        .subscribe(\n            res => this.afterSaving(),\n            err => this.error(err, 2500)\n        );\n    }\n  }\n  //OBSOLETE Get emitter to search on types\n  getEventToggleEmitter(event:any){\n    if (event == undefined) return\n    //console.log('getEventToggleEmitter:',event)\n    if (event.checked) {\n      this.searchtypes.push(event.name);\n    } else if (!event.checked) {\n      this.searchtypes.splice(this.searchtypes.indexOf(event.name), 1);\n    }    \n    //Query DB, plot all stores\n    this.fetchField((data: Store[]) => {\n      //Delete all markers\n      this.deleteAllMarkers()\n      console.log(data)\n      this.updateMap(data);\n    })\n  }*/\n\n  ///Communication from family components via service\n  //User clicked on save or update button in the form\n  save(){\n    //Handle Update and Save\n    if (this.formResult._id != undefined) {\n      this.storeService.updateStore(this.formResult)\n        .subscribe(\n            res => {\n              //Close search marker\n              this.removeSearchMarkers(); //not sure it is needed \n              //Remove the searched location searchResult\n              this.searchResult = undefined;\n              //Refresh distinct types\n              this.loadDistinctTypes();\n              //Refresh Filter tab: refresh stores and current types\n              this.searchType(this.storetypes)\n              this.alertService.success(\"Store updated in database\", 2500)\n            },\n            err => this.alertService.error(err, 2500)\n        );\n\n    } else {\n      //Handle adding a new searched store\n      this.storeService.addStore(this.formResult)\n        .subscribe(\n            res => this.afterSavingNewStore(),\n            err => this.alertService.error(err, 2500)\n        );\n    }\n  }\n\n  afterSavingNewStore(){\n    //Close search marker\n    this.removeSearchMarkers();\n    //Remove the searched location searchResult\n    this.searchResult = undefined;\n    //Pass to showAllStores callback \n    var callback = () => {\n      //After stores have been loaded, open the store saved last\n      this.openInfoWindow(this.markers.length-1)\n      //Show message\n      this.alertService.success(\"Store saved in database\", 2500)\n      //Refresh Filter tab: refresh stores and current types\n      this.searchType(this.storetypes)\n    }\n    //Reload stores from DB\n    this.showAllStores(callback);    \n  }\n  \n  //Get emitter to search on types\n  searchType(array: string[]){\n    //console.log('map searchType:',array)\n    //Query DB, plot all stores\n    this.fetchField('types', array, (data: Store[]) => {\n      //Delete all markers\n      this.deleteAllMarkers()\n      //console.log('map searchType data:',data)\n      this.updateMap(data);\n    })\n  }\n  \n  /*Other implementation of tabs\n  searchType(obj: any){\n    if (obj == undefined) return\n    console.log('map searchType obj:',obj)\n    if (obj.name == \"*\") {\n      if (obj.checked) {\n        this.searchtypes = [\"*\"];\n      } else {\n        this.searchtypes = obj.name;\n      }\n    } else {\n      if (obj.checked) {\n        this.searchtypes.push(obj.name);\n      } else if (!obj.checked) {\n        this.searchtypes.splice(this.searchtypes.indexOf(obj.name), 1);\n      }\n    }    \n    //Query DB, plot all stores\n    this.fetchField('types', this.searchtypes, (data: Store[]) => {\n      //Delete all markers\n      this.deleteAllMarkers()\n      console.log('map searchType data:',data)\n      this.updateMap(data);\n    })\n  }\n  */\n  \n  ///Methods using API calls through service\n  // Fetch all documents.\n  showAllStores(callback?:Function) {\n    //Delete all markers\n    //Query DB, plot all stores\n    this.storeListSub = this.storeService.getAllStores()\n      .subscribe(\n        (data: Store[]) => {\n          this.deleteAllMarkers();\n          this.updateMap(data);\n          if (callback != undefined) callback()\n        },\n        err => console.error(err)\n    );\n  }\n  // Get all store types present in all documents in DB\n  loadDistinctTypes() {\n    this.storeService.getDistinctValues('types')\n      .subscribe(\n        (data: string[]) => this.storetypes = data,\n        err => console.error(err)\n      );\n  }\n  // Fetch documents of certain types\n  fetchField(field: string, array: any[], callback?:Function) {\n    this.storeListSub = this.storeService.fetchField(field, array)\n      .subscribe(\n        (data: Store[]) => {\n          if (callback!= undefined) callback(data)\n        },\n        err => console.error(err)\n    );\n    \n  }\n\n  // Delete the selected document from storage\n  deleteStore(id:string, callback?:Function) {\n    this.storeService.deleteStore(id)\n      .subscribe(() => {\n      if (callback!= undefined) callback()\n      this.alertService.success(\"Store deleted\", 2500);\n    });\n  }\n\n\n  //Plot the given Store data\n  updateMap(data:Store[]) {\n    data.forEach(element => {\n      this.setMarker(\n        element,\n        \"http://maps.gstatic.com/mapfiles/markers2/icon_green.png\",\n        element.address+' '+element.street_num+', '+element.locality\n      );\n    });\n  }\n\n  ///Messages\n  showAlert(text: string): void {\n    /*if (this.msgText != \"\") return;\n    this.msgText = text;\n    setTimeout(() => {\n      this.msgText = \"\";\n    }, 2000);*/\n    this.alertService.warn(text)\n  }\n\n  //\n  deleteAllMarkers() {\n    // Sets the map on all markers in the array\n    for (var i = 0; i < this.markers.length; i++) {\n      this.markers[i].setMap(null);\n    }\n    this.markers = [];\n  }\n  \n  \n  ///This is for periodic tracking. Useful for mobiles\n  /*trackMe() {\n    if (navigator.geolocation) {\n      this.isTracking = true;\n      navigator.geolocation.watchPosition((position) => {\n        this.showTrackingPosition(position);\n      });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  showTrackingPosition(position) {\n    console.log(`tracking postion:  ${position.coords.latitude} - ${position.coords.longitude}`);\n    this.currentLat = position.coords.latitude;\n    this.currentLong = position.coords.longitude;\n\n    let location = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n    this.map.panTo(location);\n\n    if (!this.marker) {\n      this.marker = new google.maps.Marker({\n        position: location,\n        map: this.map,\n        title: 'Got you!'\n      });\n    }\n    else {\n      this.marker.setPosition(location);\n    }\n  }*/\n\n    /*Moved to geocoder component\n  //Geocoding using in node-geocoder in backend\n  geocode() {\n    console.log(\"map geocode clicked\");\n    var out = this.storeService.geocode(this.search_string).subscribe(\n      res => {\n        console.log(\"map geocode.subscribe res:\", res);\n        this.process_results_backend(res);\n        this.alertService.success(\"Geocoding successful\", 2500);\n      },\n      err => console.error(\"Geocoding err:\", err),\n      () => console.log(\"Completed\")\n    );\n  }\n  process_results_backend(results) {\n    //TODO:review when more than one search result\n    //Move map to searched location\n    this.map.panTo(\n      new google.maps.LatLng(results[0].latitude, results[0].longitude)\n    );\n    //Pass data to form component and set marker\n    this.formResult = this.storeService.result2Store_backend(results[0]);\n    this.setMarker(this.formResult, undefined, \"Search result\");\n  }\n\n  run_geocoding() {\n    if (!this.geocoder) this.geocoder = new google.maps.Geocoder();\n    this.geocoder.geocode(\n      {\n        address: this.search_string,\n        region: \"no\", //region bias to Norway\n        componentRestrictions: { country: this.componentRestrictions } //country restriction to Norway\n      },\n      (results, status) => {\n        console.log(\"run_geocoding status:\", status, \" results:\", results);\n        if (status == google.maps.GeocoderStatus.OK) {\n          this.process_results(results);\n        }\n      }\n    );\n  }\n  process_results(results) {\n    //Clear any other previous searches\n    this.removeSearchMarkers();\n    //TODO:review when more than one search result. Use Place API:\n    //https://developers.google.com/maps/documentation/geocoding/best-practices\n    //Move map to searched location\n    this.map.panTo(results[0].geometry.location);\n    //this.setMarker(results[0], undefined, 'Search result');\n    //Pass data to form component and set marker\n    this.formResult = this.storeService.result2Store(results[0]);\n    this.setMarker(this.formResult, undefined, \"Search result\");\n  }\n  */\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">    \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 order-md-1\\\">\\n      <h2 class=\\\"page-header\\\">Profile</h2>\\n        <form (ngSubmit)=\\\"onUpdateSubmit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-7 mb-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Username</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" class=\\\"form-control\\\" readonly>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"!showChangePwd\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-7 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Name</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"user.name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-7 mb-3\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Email</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"showChangePwd\\\">\\n            <div *ngIf=\\\"!showNewPwds\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-7 mb-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Old Password</label>\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"oldpassword\\\" name=\\\"oldpassword\\\" class=\\\"form-control\\\">\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"showNewPwds\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-7 mb-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>New Password</label>\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"newpassword\\\" name=\\\"newpassword\\\" class=\\\"form-control\\\">\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-7 mb-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Confirm New Password</label>\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"newpassword2\\\" name=\\\"newpassword2\\\" class=\\\"form-control\\\">\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-7 mb-3\\\">\\n              <a *ngIf=\\\"!showChangePwd\\\" href=\\\"#\\\" onClick=\\\"return false;\\\" (click)=\\\"showChangePwd=!showChangePwd\\\">Change password</a>\\n            </div>\\n          </div>\\n\\n          <input *ngIf=\\\"!showChangePwd\\\" type=\\\"submit\\\" class=\\\"btn btn-dark text-white mr-1\\\" value=\\\"Submit\\\">\\n          <button *ngIf=\\\"showChangePwd && !showNewPwds\\\" type=\\\"button\\\" class=\\\"btn btn-dark text-white mr-1\\\" (click)=\\\"authenticate($event)\\\">Authenticate</button>\\n          <button *ngIf=\\\"showChangePwd && showNewPwds\\\" type=\\\"button\\\" class=\\\"btn btn-dark text-white mr-1\\\" (click)=\\\"onChangePassword($event)\\\">Change Password</button>\\n        </form>\\n        <br>\\n\\n        <div class=\\\"input-group-append\\\">\\n          <alert></alert>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n        \"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { AlertService } from \"../../shared/services/alert.service\";\nimport { ValidateService} from '../../shared/services/validate.service';\nimport { Subscription } from 'rxjs'; //to unsubscribe\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent implements OnInit {\n  user: any = {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"username\": \"\",\n    \"password\": \"\"\n  };\n  showChangePwd = false;\n  showNewPwds = false;\n  oldpassword: string;\n  newpassword: string;\n  newpassword2: string;\n  subscription: Subscription;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router,\n    private alertService: AlertService,\n    private validateService:ValidateService\n  ) { }\n\n  // Need to load the user when initilize\n  ngOnInit() {\n    this.subscription = this.authService.getProfile().subscribe(\n      profile => {\n        this.user = profile.user;\n        //Remove the password cause I do not need it (and otherwise trouble in server when update profile)\n        this.user.password = '';\n      },\n      err => {\n        console.error('Error in retrieving the profile: ',err);\n        return false;\n      });\n  }\n  \n  //Unsubscribe\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n      \n  onUpdateSubmit(onSuccessfulPwdChange?:Function){\n    // Required Fields\n    if(!this.validateService.validateRegister(this.user)){\n      this.alertService.warn('Please fill in all fields', 2500);\n      return false;\n    }\n    // Validate Email\n    if(!this.validateService.validateEmail(this.user.email)){\n      this.alertService.warn('Please use a valid email', 2500);\n      return false;\n    }\n    // Update User\n    this.subscription = this.authService.editUser(this.user)\n      .subscribe(data => {\n        if(data.success){\n          if (onSuccessfulPwdChange != undefined) {\n            onSuccessfulPwdChange()\n          } else {\n            this.alertService.success('You have successfully updated your profile', 2500);          }\n        } else {\n          this.alertService.error('Something went wrong', 2500);\n        }\n      });\n  }\n\n  //This is similar to onUpdateSubmit in register component\n  authenticate() {\n    const user = {\n      username: this.user.username,\n      password: this.oldpassword\n    }\n    //Test authentication\n    this.subscription = this.authService.authenticateUser(user)\n      .subscribe(data => {\n        if(data.success){\n          this.showNewPwds = true;\n        } else {\n          this.alertService.error(data.msg, 2500);\n        }\n      });\n  }\n\n  //Check if new passwords match\n  onChangePassword() {\n    if (this.newpassword !== this.newpassword2) {\n      this.alertService.error('Passwords do not match', 2500);\n    } else {\n      //Pass the password \n      this.user.password = this.newpassword;\n      var callback = () => {\n        this.alertService.success('You have successfully changed your password', 2500);\n        this.authService.logout()\n        setTimeout(() => this.router.navigate(['/login']), 1500);\n      }\n      var success = this.onUpdateSubmit(callback);\n      }\n    } \n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">    \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 order-md-1\\\">\\n      <h2 class=\\\"page-header\\\">Register</h2>\\n        \\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onRegisterSubmit()\\\" novalidate>\\n        \\n        <!--<app-singlecontrol (ngModel)=\\\"'username'\\\" [label]=\\\"'Username'\\\" [type]=\\\"'text'\\\" [name]=\\\"'username'\\\" [value]=\\\"'amarinz'\\\"></app-singlecontrol>\\n        <app-singlecontrol (ngModel)=\\\"'name'\\\" [label]=\\\"'Name'\\\" [type]=\\\"'text'\\\" [name]=\\\"'name'\\\" [value]=\\\"'ale'\\\"></app-singlecontrol>\\n        <app-singlecontrol (ngModel)=\\\"'email'\\\" [label]=\\\"'Email'\\\" [type]=\\\"'text'\\\" [name]=\\\"'email'\\\" [value]=\\\"'aaa@gmail.com'\\\"></app-singlecontrol>\\n        <app-singlecontrol (ngModel)=\\\"'password'\\\" [label]=\\\"'Password'\\\" [type]=\\\"'text'\\\" [name]=\\\"'password'\\\" [value]=\\\"'123'\\\"></app-singlecontrol>\\n        -->\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-7 mb-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Username</label>\\n              <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\">\\n            </div>\\n          </div>\\n        </div>          \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-7 mb-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Name</label>\\n              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-7 mb-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Email</label>\\n              <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\">\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-7 mb-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Password</label>\\n              <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"input-group-append\\\">\\n          <alert></alert>\\n        </div>\\n        \\n        <br>  \\n        <input type=\\\"submit\\\" class=\\\"btn btn-dark\\\" value=\\\"Submit\\\" [disabled]=\\\"form.pristine\\\">\\n      </form>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService} from '../../shared/services/validate.service';\nimport { AuthService} from '../../shared/services/auth.service';\nimport { AlertService } from \"../../shared/services/alert.service\";\nimport { Router } from '@angular/router';\nimport { FormGroup,FormBuilder } from '@angular/forms';\nimport { Subscription } from 'rxjs'; //to unsubscribe\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  public form: FormGroup;\n  subscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private validateService:ValidateService, \n    private authService:AuthService,\n    private router:Router,\n    private alertService: AlertService\n  ) {\n    this.form = formBuilder.group({\n      username: 'amarin',\n      name: 'amarin',\n      email: 'defaul@email.co',\n      password: '',\n    });\n  }\n\n  //Unsubscribe\n  ngOnDestroy() {\n    if (typeof this.subscription !== 'undefined') {\n      this.subscription.unsubscribe();\n    }\n  }\n  \n  ngOnInit() {}\n\n  onRegisterSubmit(){\n    const user = Object.assign({}, this.form.value);\n    // Required Fields (password checked later)\n    if(!this.validateService.validateRegister(user)){\n      this.alertService.warn('Please fill in all fields', 2500);\n      return false;\n    }\n\n    // Required Password\n    if(!this.validateService.validatePassword(user.password)){\n      this.alertService.warn('Please fill in all fields', 2500);\n      return false;\n    }\n\n    // Validate Email\n    if(!this.validateService.validateEmail(user.email)){\n      this.alertService.warn('Please use a valid email', 2500);\n      return false;\n    }\n\n    // Register User\n    this.subscription = this.authService.registerUser(user)\n      .subscribe(data => {\n        if(data.success){\n          this.alertService.success('You are now registered and can log in', 2500);\n          setTimeout(() => this.router.navigate(['/login']), 1500);\n        } else {\n          this.alertService.error(data.msg, 2500);\n          this.router.navigate(['/register']);\n        }\n      });\n  }\n}\n","module.exports = \"<div *ngFor=\\\"let alert of alerts\\\" class=\\\"{{ cssClass(alert) }} alert-dismissable\\\">\\n  {{ alert.message }} &nbsp;<a class=\\\"close\\\" (click)=\\\"removeAlert(alert)\\\">&times;</a>\\n</div>\\n\"","﻿import { Component, OnInit, Input } from '@angular/core';\nimport { Alert, AlertType } from '../models/alert';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n    //moduleId: module.id,\n    selector: 'alert',\n    templateUrl: 'alert.component.html'\n})\n\nexport class AlertComponent {\n    @Input() id: string;\n\n    alerts: Alert[] = [];\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.alertService.getAlert(this.id).subscribe((alert: Alert) => {\n            if (!alert.message) {\n                // clear alerts when an empty alert is received\n                this.alerts = [];\n                return;\n            }\n\n            // add alert to array\n            this.alerts.push(alert);\n        });\n    }\n\n    removeAlert(alert: Alert) {\n        this.alerts = this.alerts.filter(x => x !== alert);\n    }\n\n    cssClass(alert: Alert) {\n        if (!alert) {\n            return;\n        }\n\n        // return css class based on alert type\n        switch (alert.type) {\n            case AlertType.Success:\n                return 'alert alert-success';\n            case AlertType.Error:\n                return 'alert alert-danger';\n            case AlertType.Info:\n                return 'alert alert-info';\n            case AlertType.Warning:\n                return 'alert alert-warning';\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService:AuthService,\n    private router:Router\n  ){ }\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if(this.authService.isTokenExp()){\n        this.router.navigate(['/login']);\n        return false;\n      } else {\n        return true;\n      }\n  }\n}\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" target=\\\"_blank\\\">{{username}}</a>\\n  <button\\n    class=\\\"navbar-toggler\\\"\\n    type=\\\"button\\\"\\n    data-toggle=\\\"collapse\\\"\\n    data-target=\\\"#navbarsExample02\\\"\\n    aria-controls=\\\"navbarsExample02\\\"\\n    aria-expanded=\\\"false\\\"\\n    aria-label=\\\"Toggle navigation\\\"\\n  >\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExample02\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/\\\">\\n          Home\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/about\\\">\\n          About\\n        </a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.isTokenExp()\\\" \\n        routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.isTokenExp()\\\" \\n        [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"!authService.isTokenExp()\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"/\\\">Logout</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.isTokenExp()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../shared/services/auth.service';\nimport { AlertService } from \"../../../shared/services/alert.service\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit {\n  constructor(\n    public authService: AuthService,\n    private router:Router,\n    private alertService: AlertService,) {}\n    public username:string = this.authService.getLoggedUsername();\n    \n  ngOnInit() { }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.alertService.info(\"You are now logged out\", 2500);\n    this.router.navigate(['/']);\n    return false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3RhYnNldC90YWJzZXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<ngb-tabset #t=\\\"ngbTabset\\\" (tabChange)=\\\"onTabChange($event)\\\">\\n  <ngb-tab id=\\\"search\\\" >\\n      <ng-template ngbTabTitle><b>Search</b></ng-template>\\n      <ng-template ngbTabContent>\\n        <br>\\n        <app-geocoder id=\\\"app-geocoder\\\"></app-geocoder>\\n        <app-form id=\\\"app-form\\\" [formResult]=\\\"formResult\\\" [storetypes]=\\\"storetypes\\\"></app-form>\\n      </ng-template>\\n  </ngb-tab>\\n  <ngb-tab id=\\\"filter\\\">\\n    <ng-template ngbTabTitle><b>Filter</b></ng-template>\\n    <ng-template ngbTabContent>\\n      <br>\\n      <app-searchtypes id=\\\"app-searchtypes\\\" [storetypes]=\\\"storetypes\\\" ></app-searchtypes>\\n    </ng-template>\\n  </ngb-tab>\\n</ngb-tabset>\\n<!--\\n  <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"t.select('tabset2')\\\">Selected tab with \\\"tabset2\\\" id</button>\\n-->\\n\"","import { Component, Input, OnDestroy } from '@angular/core';\nimport { Store } from \"../../models/store.model\";\nimport { NgbTabChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { ToMapService } from '../../services/to-map.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-tabset',\n  templateUrl: './tabset.component.html',\n  styleUrls: ['./tabset.component.css']\n})\nexport class TabsetComponent implements OnDestroy {\n  @Input() storetypes: string[];  \n  @Input() formResult: Store;\n  subscription: Subscription;\n\n  constructor(private toMapService: ToMapService) { }\n\n  public onTabChange($event: NgbTabChangeEvent) {\n    //Send notification of tab change to map component\n    this.toMapService.sendSearchTab($event.nextId);\n  }\n  ngOnDestroy() {\n    // Prevent memory leak when component destroyed\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}","export class Alert {\n  type: AlertType;\n  message: string;\n  alertId: string;\n  keepAfterRouteChange: boolean;\n\n  constructor(init?: Partial<Alert>) {\n    Object.assign(this, init);\n  }\n}\n\nexport enum AlertType {\n  Success,\n  Error,\n  Info,\n  Warning\n}\n","﻿import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Alert, AlertType } from '../../shared/models/alert';\n//import { Router, NavigationStart } from '@angular/router';\n\n@Injectable()\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    //private keepAfterRouteChange = false;\n\n    constructor(){//private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        /*router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert messages\n                    this.clear();\n                }\n            }\n        });*/\n    }\n\n    // subscribe to alerts\n    getAlert(alertId?: string): Observable<any> {\n        return this.subject.asObservable().pipe(filter((x: Alert) => x && x.alertId === alertId));\n    }\n\n    // convenience methods\n    success(message: string, timeout = 1000) {\n        this.alert(new Alert({ message, type: AlertType.Success }));\n        setTimeout(() => this.clear(), timeout);\n    }\n\n    error(message: string, timeout = 1000) {\n        this.alert(new Alert({ message, type: AlertType.Error }));\n        setTimeout(() => this.clear(), timeout);\n    }\n\n    info(message: string, timeout = 1000) {\n        this.alert(new Alert({ message, type: AlertType.Info }));\n        setTimeout(() => this.clear(), timeout);\n    }\n\n    warn(message: string, timeout = 1000) {\n        this.alert(new Alert({ message, type: AlertType.Warning }));\n        setTimeout(() => this.clear(), timeout);\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        //this.keepAfterRouteChange = alert.keepAfterRouteChange;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(alertId?: string) {\n        this.subject.next(new Alert({ alertId }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // Backend Server URI\n  // Set in /backend/server.js\n  uri:string = environment.node_protocol+'://'+environment.node_host+':'+environment.node_port;\n\n  // The name of your MongoDB database collection.\n  collection:string = \"users\";\n    \n  authToken: any;\n  user: any;\n\n  constructor(\n    private http:Http,\n    public jwtHelper:JwtHelperService\n  ) { }\n\n  // Reach out to backend API\n  registerUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post(`${this.uri}/${this.collection}/register`, user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  editUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post(`${this.uri}/${this.collection}/update`, user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post(`${this.uri}/${this.collection}/authenticate`, user, {headers: headers})\n    .pipe(map(res => res.json()));\n  }\n\n  // Log that the logged-in user did a geolocation search\n  logUserSearch(username:string){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post(`${this.uri}/${this.collection}/logsearch`, {username: username}, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getSearchFrequency(username:string){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post(`${this.uri}/${this.collection}/searchstats`, {username: username}, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getProfile(){\n    let headers = new Headers();\n    this.loadToken();\n    // Use the token here\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.uri}/${this.collection}/profile`, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  // Save in LocalStorage\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  //Get username from LocalStorage\n  getLoggedUsername() {\n    let userjson = JSON.parse(localStorage.getItem('user'));\n    if (userjson == null) return ''\n    return userjson['username']\n  }\n\n  // Fetch from LocalStorage\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  isTokenExp(){\n    return this.jwtHelper.isTokenExpired();\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Store } from \"../models/store.model\";\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StoreService {\n  // Backend Server URI\n  // Set in /backend/server.js\n  uri:string = environment.node_protocol+'://'+environment.node_host+':'+environment.node_port;\n\n  // The name of your MongoDB database collection.\n  collection:string = \"stores\";\n\n  constructor(private http: HttpClient) {}\n\n  // Call node-geocoder\n  geocode(address: string) {\n    var url = `${this.uri}/${this.collection}/geopromise/` + encodeURI(address);\n    return this.http.get(url);\n  }\n\n  // Fetches all documents.\n  getAllStores() {\n    return this.http.get(`${this.uri}/${this.collection}`);\n  }\n\n  // Fetches a single document by _id.\n  getStoreById(id: string) {\n    return this.http.get(`${this.uri}/${this.collection}/get/${id}`);\n  }\n\n  // Creates a new document.\n  addStore(store: Store) {\n    return this.http.post(`${this.uri}/${this.collection}/add`, store);\n  }\n\n  // Updates an existing document.\n  updateStore(store: Store) {\n    const newstore = {\n      coords: store.coords,\n      address: store.address,\n      street_num: store.street_num,\n      locality: store.locality,\n      zip: store.zip,\n      country: store.country,\n      descr: store.descr,\n      types: store.types,\n      username: store.username,\n      rating: {\n        total: store.rating.total,\n        count: store.rating.count\n      }\n    };\n    return this.http.post(`${this.uri}/${this.collection}/update/${store._id}`, newstore);\n  }\n\n  // Deletes an existing document.\n  deleteStore(id: string) {\n    return this.http.get(`${this.uri}/${this.collection}/delete/${id}`);\n  }\n\n  // Query documents on a field\n  fetchField(field, array) {\n    return this.http.post(`${this.uri}/${this.collection}/fetch/${field}`, array);\n  }\n  \n  \n  // Get the distinct values of a field (Not yet used)\n  getDistinctValues(field) {\n    return this.http.get(`${this.uri}/${this.collection}/distinct/${field}`);\n  }\n\n  // Check if address exists in DB\n  address_exists(search_string) {\n    //Clean the address to be searched (remove punctuation and junk characters)\n    var address = search_string.match(/\\d\\w*|\\w+( +[a-z]\\w*)*/gi).join(' ')\n    //Send to REST API\n    var url = `${this.uri}/${this.collection}/exists/` + encodeURI(address);\n    return this.http.get(url);\n  }\n\n  //Utility method to convert result to store types\n  result2Store(result) {\n    const store: Store = {\n      coords: [\n        Number(result.geometry.location.lat()),\n        Number(result.geometry.location.lng())\n      ],\n      address: \"\",\n      street_num: \"\",\n      locality: \"\",\n      zip: \"\",\n      country: \"\",\n      descr: \"\",\n      types: [],\n      username: \"\",\n      rating: {\n        total: undefined,\n        count: undefined\n      }\n    };\n    for (var i = 0; i < result.address_components.length; i++) {\n      if (result.address_components[i].types.includes(\"route\")) {\n        store.address = result.address_components[i].long_name;\n      }\n      if (result.address_components[i].types.includes(\"street_number\")) {\n        store.street_num = result.address_components[i].short_name;\n        store.address += \", \" + store.street_num;\n      }\n      if (result.address_components[i].types.includes(\"locality\"))\n        store.locality = result.address_components[i].long_name;\n      if (\n        result.address_components[i].types.includes(\n          \"administrative_area_level_1\"\n        )\n      )\n        store.locality = result.address_components[i].long_name;\n      if (result.address_components[i].types.includes(\"postal_code\"))\n        store.zip = result.address_components[i].short_name;\n      if (result.address_components[i].types.includes(\"country\"))\n        store.country = result.address_components[i].long_name;\n    }\n    return store;\n  }\n\n  //Utility method to convert result to store types\n  result2Store_backend(result) {\n    const store: Store = {\n      coords: [Number(result.latitude), Number(result.longitude)],\n      address: result.streetname,\n      street_num: result.streetNumber,\n      locality: result.city,\n      zip: result.zipcode,\n      country: result.country,\n      descr: \"\",\n      types: [],\n      username: \"aless80\", //TODO when authentication is implemented\n      rating: {\n        total: undefined,\n        count: undefined\n      }\n    };\n    return store;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject }    from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToMapService {\n\n  constructor() { }\n  \n  // Observable string sources\n  private typeToggleSource = new Subject<any>();\n  private formSubmitSource = new Subject<boolean>();\n  private searchTabSource = new Subject<string>();\n\n  // Observable string streams\n  typeToggle$ = this.typeToggleSource.asObservable();\n  formSubmit$ = this.formSubmitSource.asObservable();\n  searchTab$ = this.searchTabSource.asObservable();\n\n  // Service message commands\n  sendTypeToggle(checked: string[]) {\n    this.typeToggleSource.next(checked);\n  }\n  sendFormSubmit(input: boolean) {\n    this.formSubmitSource.next(input);\n  }\n  sendSearchTab(input: string) {\n    this.searchTabSource.next(input);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user: any){\n    if(user.name == undefined || user.email == undefined || user.username == undefined)\n      return false;\n    else\n      return true;\n  }\n\n  validatePassword(password: string){\n    if(password == undefined || password == '')\n      return false;\n    else \n      return true;\n  }\n  validateEmail(email: string){\n    // From https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    // Return true if email, or false if not email\n    return re.test(String(email).toLowerCase());\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  protocol: 'http',\n  host: 'localhost',\n  port: 4200,\n  node_protocol: 'http',\n  node_host: 'localhost',\n  node_port: 4000,\n  geolocation_hourly_quota: 6,\n  geolocation_daily_quota: 40,\n  geolocation_quota: 150,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}